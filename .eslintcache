[{"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"1","D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"2","D:\\Work\\React\\todo-16\\src\\components\\EditableSpan\\EditableSpan.tsx":"3","D:\\Work\\React\\todo-16\\src\\app\\store.ts":"4","D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"5","D:\\Work\\React\\todo-16\\src\\index.tsx":"6","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\app\\store.ts":"7","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"8","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\components\\AddItemForm\\AddItemForm.tsx":"9","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\components\\EditableSpan\\EditableSpan.tsx":"10","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\api\\todolists-api.ts":"11","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\index.tsx":"12","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\tasks-reducer.ts":"13","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\utils\\error-utils.ts":"14","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"15","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\Login\\Login.tsx":"16","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\app\\App.tsx":"17","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"18","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\Login\\authReducer.ts":"19","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\app\\app-reducer.ts":"20","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"21","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\reportWebVitals.ts":"22","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"23"},{"size":3802,"mtime":1597327450000,"results":"24","hashOfConfig":"25"},{"size":1773,"mtime":1596295538000,"results":"26","hashOfConfig":"25"},{"size":952,"mtime":1594154724000,"results":"27","hashOfConfig":"25"},{"size":1097,"mtime":1597327450000,"results":"28","hashOfConfig":"25"},{"size":4585,"mtime":1597327450000,"results":"29","hashOfConfig":"25"},{"size":643,"mtime":1611389400828,"results":"30","hashOfConfig":"25"},{"size":1181,"mtime":1612026112616,"results":"31","hashOfConfig":"32"},{"size":4027,"mtime":1612028861148,"results":"33","hashOfConfig":"32"},{"size":1595,"mtime":1596715562000,"results":"34","hashOfConfig":"32"},{"size":952,"mtime":1594154724000,"results":"35","hashOfConfig":"32"},{"size":3084,"mtime":1612117514825,"results":"36","hashOfConfig":"32"},{"size":795,"mtime":1612014487207,"results":"37","hashOfConfig":"32"},{"size":5633,"mtime":1596722126000,"results":"38","hashOfConfig":"32"},{"size":811,"mtime":1596719330000,"results":"39","hashOfConfig":"32"},{"size":4193,"mtime":1596715250000,"results":"40","hashOfConfig":"32"},{"size":3377,"mtime":1612027800935,"results":"41","hashOfConfig":"32"},{"size":2814,"mtime":1612117956433,"results":"42","hashOfConfig":"32"},{"size":1773,"mtime":1596295538000,"results":"43","hashOfConfig":"32"},{"size":1454,"mtime":1612114418389,"results":"44","hashOfConfig":"32"},{"size":2308,"mtime":1612117081656,"results":"45","hashOfConfig":"32"},{"size":4585,"mtime":1597327450000,"results":"46","hashOfConfig":"32"},{"size":425,"mtime":1607869388000,"results":"47","hashOfConfig":"32"},{"size":1092,"mtime":1596716576000,"results":"48","hashOfConfig":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1o8uq61",{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g5mlim",{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["104","105","106","107","108","109","110","111"],"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["112","113","114"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","D:\\Work\\React\\todo-16\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"D:\\Work\\React\\todo-16\\src\\app\\store.ts",[],"D:\\Work\\React\\todo-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["115"],"D:\\Work\\React\\todo-16\\src\\index.tsx",[],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\app\\store.ts",[],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["116","117","118","119","120","121","122","123"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\components\\AddItemForm\\AddItemForm.tsx",["124","125","126"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["127","128"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\api\\todolists-api.ts",["129"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\index.tsx",["130"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './app/App';\nimport {Provider} from 'react-redux';\nimport {store} from './app/store';\nimport {Router} from \"@material-ui/icons\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["131","132"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\tasks-reducer.ts",["133","134"],"import {AddTodolistActionType, RemoveTodolistActionType, SetTodolistsActionType} from './todolists-reducer'\r\nimport {TaskPriorities, TaskStatuses, TaskType, todolistsAPI, UpdateTaskModelType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\nimport {handleServerAppError, handleServerNetworkError} from '../../utils/error-utils'\r\n\r\nconst initialState: TasksStateType = {}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK':\r\n            return {...state, [action.todolistId]: state[action.todolistId].filter(t => t.id != action.taskId)}\r\n        case 'ADD-TASK':\r\n            return {...state, [action.task.todoListId]: [action.task, ...state[action.task.todoListId]]}\r\n        case 'UPDATE-TASK':\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: state[action.todolistId]\r\n                    .map(t => t.id === action.taskId ? {...t, ...action.model} : t)\r\n            }\r\n        case 'ADD-TODOLIST':\r\n            return {...state, [action.todolist.id]: []}\r\n        case 'REMOVE-TODOLIST':\r\n            const copyState = {...state}\r\n            delete copyState[action.id]\r\n            return copyState\r\n        case 'SET-TODOLISTS': {\r\n            const copyState = {...state}\r\n            action.todolists.forEach(tl => {\r\n                copyState[tl.id] = []\r\n            })\r\n            return copyState\r\n        }\r\n        case 'SET-TASKS':\r\n            return {...state, [action.todolistId]: action.tasks}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTaskAC = (taskId: string, todolistId: string) =>\r\n    ({type: 'REMOVE-TASK', taskId, todolistId} as const)\r\nexport const addTaskAC = (task: TaskType) =>\r\n    ({type: 'ADD-TASK', task} as const)\r\nexport const updateTaskAC = (taskId: string, model: UpdateDomainTaskModelType, todolistId: string) =>\r\n    ({type: 'UPDATE-TASK', model, todolistId, taskId} as const)\r\nexport const setTasksAC = (tasks: Array<TaskType>, todolistId: string) =>\r\n    ({type: 'SET-TASKS', tasks, todolistId} as const)\r\n\r\n// thunks\r\nexport const fetchTasksTC = (todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.getTasks(todolistId)\r\n        .then((res) => {\r\n            const tasks = res.data.items\r\n            dispatch(setTasksAC(tasks, todolistId))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\nexport const removeTaskTC = (taskId: string, todolistId: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    todolistsAPI.deleteTask(todolistId, taskId)\r\n        .then(res => {\r\n            const action = removeTaskAC(taskId, todolistId)\r\n            dispatch(action)\r\n        })\r\n}\r\nexport const addTaskTC = (title: string, todolistId: string) => (dispatch: Dispatch<ActionsType | SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    todolistsAPI.createTask(todolistId, title)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                const task = res.data.data.item\r\n                const action = addTaskAC(task)\r\n                dispatch(action)\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            } else {\r\n                handleServerAppError(res.data, dispatch);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n}\r\nexport const updateTaskTC = (taskId: string, domainModel: UpdateDomainTaskModelType, todolistId: string) =>\r\n    (dispatch: ThunkDispatch, getState: () => AppRootStateType) => {\r\n        const state = getState()\r\n        const task = state.tasks[todolistId].find(t => t.id === taskId)\r\n        if (!task) {\r\n            //throw new Error(\"task not found in the state\");\r\n            console.warn('task not found in the state')\r\n            return\r\n        }\r\n\r\n        const apiModel: UpdateTaskModelType = {\r\n            deadline: task.deadline,\r\n            description: task.description,\r\n            priority: task.priority,\r\n            startDate: task.startDate,\r\n            title: task.title,\r\n            status: task.status,\r\n            ...domainModel\r\n        }\r\n\r\n        todolistsAPI.updateTask(todolistId, taskId, apiModel)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    const action = updateTaskAC(taskId, domainModel, todolistId)\r\n                    dispatch(action)\r\n                } else {\r\n                    handleServerAppError(res.data, dispatch);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handleServerNetworkError(error, dispatch);\r\n            })\r\n    }\r\n\r\n// types\r\nexport type UpdateDomainTaskModelType = {\r\n    title?: string\r\n    description?: string\r\n    status?: TaskStatuses\r\n    priority?: TaskPriorities\r\n    startDate?: string\r\n    deadline?: string\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof removeTaskAC>\r\n    | ReturnType<typeof addTaskAC>\r\n    | ReturnType<typeof updateTaskAC>\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof setTasksAC>\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\utils\\error-utils.ts",[],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["135","136","137","138","139","140"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["141","142"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\Login\\Login.tsx",["143"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\app\\App.tsx",["144","145"],"import React, {useEffect} from 'react'\r\nimport './App.css'\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    CircularProgress,\r\n    Container,\r\n    IconButton,\r\n    LinearProgress,\r\n    Toolbar,\r\n    Typography\r\n} from '@material-ui/core'\r\nimport {Menu} from '@material-ui/icons'\r\nimport {TodolistsList} from '../features/TodolistsList/TodolistsList'\r\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from './store'\r\nimport {initializeAppTC, RequestStatusType} from './app-reducer'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Login} from \"../features/Login/Login\";\r\nimport {logoutTC, setIsLoggedInAC} from \"../features/Login/authReducer\";\r\n\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nfunction App({demo = false}: PropsType) {\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [])\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status)\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const handlerLogOut = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <ErrorSnackbar/>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    {\r\n                        isLoggedIn ?\r\n                            <Button color=\"inherit\" onClick={handlerLogOut}>Log Out</Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    {/*<Button color=\"inherit\">Login</Button>*/}\r\n                </Toolbar>\r\n                {status === 'loading' && <LinearProgress/>}\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Switch>\r\n                    <Route exact path={'/'} render={() => <TodolistsList demo={demo}/>}/>\r\n                    <Route path={'/login'} render={() => <Login/>}/>\r\n\r\n                    <Route path={'/404'} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\r\n                    <Redirect from={'*'} to={'/404'}/>\r\n                </Switch>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["146","147","148"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\Login\\authReducer.ts",[],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\app\\app-reducer.ts",[],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["149"],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\reportWebVitals.ts",[],"C:\\WebStorm_App\\it-incubator-todolist-ts-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],{"ruleId":"150","severity":1,"message":"151","line":34,"column":8,"nodeType":"152","endLine":34,"endColumn":10,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":39,"column":8,"nodeType":"152","endLine":39,"endColumn":10,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"154","line":44,"column":8,"nodeType":"152","endLine":44,"endColumn":10,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"154","line":49,"column":8,"nodeType":"152","endLine":49,"endColumn":10,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"154","line":54,"column":8,"nodeType":"152","endLine":54,"endColumn":10,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"154","line":59,"column":8,"nodeType":"152","endLine":59,"endColumn":10,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"154","line":64,"column":8,"nodeType":"152","endLine":64,"endColumn":10,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"154","line":69,"column":8,"nodeType":"152","endLine":69,"endColumn":10,"suggestions":"161"},{"ruleId":"150","severity":1,"message":"162","line":15,"column":97,"nodeType":"152","endLine":15,"endColumn":130,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"162","line":20,"column":8,"nodeType":"152","endLine":20,"endColumn":41,"suggestions":"164"},{"ruleId":"150","severity":1,"message":"162","line":24,"column":8,"nodeType":"152","endLine":24,"endColumn":41,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":45,"nodeType":"168","messageId":"169","endLine":10,"endColumn":47},{"ruleId":"150","severity":1,"message":"170","line":37,"column":8,"nodeType":"152","endLine":37,"endColumn":10,"suggestions":"171"},{"ruleId":"150","severity":1,"message":"154","line":42,"column":8,"nodeType":"152","endLine":42,"endColumn":10,"suggestions":"172"},{"ruleId":"150","severity":1,"message":"154","line":47,"column":8,"nodeType":"152","endLine":47,"endColumn":10,"suggestions":"173"},{"ruleId":"150","severity":1,"message":"154","line":52,"column":8,"nodeType":"152","endLine":52,"endColumn":10,"suggestions":"174"},{"ruleId":"150","severity":1,"message":"154","line":57,"column":8,"nodeType":"152","endLine":57,"endColumn":10,"suggestions":"175"},{"ruleId":"150","severity":1,"message":"154","line":62,"column":8,"nodeType":"152","endLine":62,"endColumn":10,"suggestions":"176"},{"ruleId":"150","severity":1,"message":"154","line":67,"column":8,"nodeType":"152","endLine":67,"endColumn":10,"suggestions":"177"},{"ruleId":"150","severity":1,"message":"154","line":72,"column":8,"nodeType":"152","endLine":72,"endColumn":10,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":12},{"ruleId":"179","severity":1,"message":"183","line":2,"column":14,"nodeType":"181","messageId":"182","endLine":2,"endColumn":20},{"ruleId":"179","severity":1,"message":"184","line":2,"column":22,"nodeType":"181","messageId":"182","endLine":2,"endColumn":33},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":null,"fatal":true,"severity":2,"message":"189","line":19,"column":4},{"ruleId":"179","severity":1,"message":"190","line":8,"column":9,"nodeType":"181","messageId":"182","endLine":8,"endColumn":15},{"ruleId":"185","replacedBy":"191"},{"ruleId":"187","replacedBy":"192"},{"ruleId":"179","severity":1,"message":"193","line":5,"column":9,"nodeType":"181","messageId":"182","endLine":5,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":13,"column":94,"nodeType":"168","messageId":"169","endLine":13,"endColumn":96},{"ruleId":"150","severity":1,"message":"194","line":35,"column":8,"nodeType":"152","endLine":35,"endColumn":10,"suggestions":"195"},{"ruleId":"150","severity":1,"message":"162","line":39,"column":8,"nodeType":"152","endLine":39,"endColumn":42,"suggestions":"196"},{"ruleId":"150","severity":1,"message":"162","line":46,"column":8,"nodeType":"152","endLine":46,"endColumn":54,"suggestions":"197"},{"ruleId":"150","severity":1,"message":"162","line":48,"column":95,"nodeType":"152","endLine":48,"endColumn":134,"suggestions":"198"},{"ruleId":"150","severity":1,"message":"162","line":49,"column":101,"nodeType":"152","endLine":49,"endColumn":140,"suggestions":"199"},{"ruleId":"150","severity":1,"message":"162","line":50,"column":107,"nodeType":"152","endLine":50,"endColumn":146,"suggestions":"200"},{"ruleId":"185","replacedBy":"201"},{"ruleId":"187","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":62,"column":32,"nodeType":"205","endLine":62,"endColumn":49},{"ruleId":"179","severity":1,"message":"206","line":21,"column":19,"nodeType":"181","messageId":"182","endLine":21,"endColumn":34},{"ruleId":"150","severity":1,"message":"207","line":32,"column":8,"nodeType":"152","endLine":32,"endColumn":10,"suggestions":"208"},{"ruleId":"150","severity":1,"message":"162","line":15,"column":97,"nodeType":"152","endLine":15,"endColumn":130,"suggestions":"209"},{"ruleId":"150","severity":1,"message":"162","line":20,"column":8,"nodeType":"152","endLine":20,"endColumn":41,"suggestions":"210"},{"ruleId":"150","severity":1,"message":"162","line":24,"column":8,"nodeType":"152","endLine":24,"endColumn":41,"suggestions":"211"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":45,"nodeType":"168","messageId":"169","endLine":10,"endColumn":47},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["212"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["213"],["214"],["215"],["216"],["217"],["218"],["219"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["220"],["221"],["222"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLogged'. Either include them or remove the dependency array.",["223"],["224"],["225"],["226"],["227"],["228"],["229"],["230"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","no-native-reassign",["231"],"no-negated-in-lhs",["232"],"Parsing error: ',' expected.","'Router' is defined but never used.",["231"],["232"],"'setAppErrorAC' is defined but never used.","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["233"],["234"],["235"],["236"],["237"],["238"],["231"],["232"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'setIsLoggedInAC' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["239"],["240"],["241"],["242"],{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},{"desc":"245","fix":"248"},{"desc":"245","fix":"249"},{"desc":"245","fix":"250"},{"desc":"245","fix":"251"},{"desc":"245","fix":"252"},{"desc":"253","fix":"254"},{"desc":"253","fix":"255"},{"desc":"253","fix":"256"},{"desc":"257","fix":"258"},{"desc":"245","fix":"259"},{"desc":"245","fix":"260"},{"desc":"245","fix":"261"},{"desc":"245","fix":"262"},{"desc":"245","fix":"263"},{"desc":"245","fix":"264"},{"desc":"245","fix":"265"},"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"253","fix":"268"},{"desc":"253","fix":"269"},{"desc":"253","fix":"270"},{"desc":"253","fix":"271"},{"desc":"253","fix":"272"},{"desc":"245","fix":"273"},{"desc":"253","fix":"274"},{"desc":"253","fix":"275"},{"desc":"253","fix":"276"},"Update the dependencies array to be: [demo, dispatch]",{"range":"277","text":"278"},"Update the dependencies array to be: [dispatch]",{"range":"279","text":"280"},{"range":"281","text":"280"},{"range":"282","text":"280"},{"range":"283","text":"280"},{"range":"284","text":"280"},{"range":"285","text":"280"},{"range":"286","text":"280"},"Update the dependencies array to be: [props]",{"range":"287","text":"288"},{"range":"289","text":"288"},{"range":"290","text":"288"},"Update the dependencies array to be: [demo, dispatch, isLogged]",{"range":"291","text":"292"},{"range":"293","text":"280"},{"range":"294","text":"280"},{"range":"295","text":"280"},{"range":"296","text":"280"},{"range":"297","text":"280"},{"range":"298","text":"280"},{"range":"299","text":"280"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"300","text":"301"},{"range":"302","text":"288"},{"range":"303","text":"288"},{"range":"304","text":"288"},{"range":"305","text":"288"},{"range":"306","text":"288"},{"range":"307","text":"280"},{"range":"308","text":"288"},{"range":"309","text":"288"},{"range":"310","text":"288"},[1172,1174],"[demo, dispatch]",[1343,1345],"[dispatch]",[1514,1516],[1719,1721],[1932,1934],[2133,2135],[2280,2282],[2459,2461],[765,798],"[props]",[1071,1104],[1261,1294],[1324,1326],"[demo, dispatch, isLogged]",[1495,1497],[1666,1668],[1871,1873],[2084,2086],[2285,2287],[2432,2434],[2611,2613],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320],[919,921],[765,798],[1071,1104],[1261,1294]]